/* Used to store tweet IDs */
CREATE TABLE IF NOT EXISTS SINCEID(id serial PRIMARY KEY, name varchar, value bigint DEFAULT 0);
INSERT INTO SINCEID (name, value) VALUES('dm_sinceid', DEFAULT);

/* FOLLOWER TABLEd */
CREATE TABLE IF NOT EXISTS FOLLOWER(id character varying(1024) NOT NULL, screen_name varchar, constraint followerpkey PRIMARY KEY(id)) WITH (OIDS=FALSE);

/*not used*/
CREATE TABLE IF NOT EXISTS FOLLOWS(id serial PRIMARY KEY, screen_name varchar);

/*For verifying users */
DROP TABLE IF EXISTS VERIFIED;
CREATE TABLE IF NOT EXISTS VERIFIED(email varchar PRIMARY KEY, twitter_handle varchar default '', code varchar default 'deadbeef', verified boolean default false);

/* To populate the VERIFIED table, run populate_emails.sh */ 


/*Tweets Table*/
/*DROP TABLE IF EXISTS TWEET;*/
CREATE TABLE IF NOT EXISTS TWEET(id character varying(1024) NOT NULL, doc hstore, constraint pkey PRIMARY KEY(id)) WITH (OIDS=FALSE);


/*Has Tweeted Table - [This table is used to persist if a user has tweeted before. This is imporant functionality when trying to re-tweet a persons first tweets.]*/
DROP TABLE IF EXISTS HASTWEETED;
CREATE TABLE IF NOT EXISTS HASTWEETED(user_id character varying(1024) NOT NULL REFERENCES FOLLOWER (id));
